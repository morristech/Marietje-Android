apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'hu.supercluster.paperwork'
apply from: '../config/quality/quality.gradle'
if (file("fabric.properties").exists()) {
    apply plugin: 'io.fabric'
}

paperwork {
    set = [
        gitSha   : gitSha(),
        buildDate: buildTime("dd-MM-yyyy HH:00:00 z", "UTC"),
    ]
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        multiDexEnabled true
        applicationId 'nl.ru.science.mariedroid'
        minSdkVersion 16
        targetSdkVersion 26
        testInstrumentationRunner "eu.se_bastiaan.marietje.runner.UnlockDeviceAndroidJUnitRunner"
        versionCode 100000202
        versionName "2.2.0"

        buildConfigField 'String', 'API_URL', '"https://marietje-noord.science.ru.nl/"'
    }

    signingConfigs {
        release {
            // This file is local only
            storeFile file('../keystore/release.keystore')
            keyAlias "release"
            keyPassword System.getenv("KEY_PASS").toString() ?: ""
            storePassword System.getenv("STORE_PASS").toString() ?: ""
        }

        debug {
            storeFile file('../keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ext.betaDistributionReleaseNotesFilePath =
                    file('../crashlytics_release_notes.txt').absolutePath
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix " (debug)"
            debuggable true
            testCoverageEnabled true
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    lintOptions {
        abortOnError true // Fail early.

        disable 'GoogleAppIndexingWarning' // App does not have deep linking.
        disable 'InvalidPackage' // Okio references java.nio that does not presented in Android SDK.
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

play {
    serviceAccountEmail = 'your-service-account-email'
    pk12File = file('key.p12')
    // By default publishes to Alpha channel
    track = 'alpha'
}

ext {
    autoValueVersion = '1.3'
    autoValueGsonVersion = '0.4.5'
    butterknifeVersion = '8.6.0'
    daggerVersion = '2.8'
    dexmakerVersion = '1.4'
    espressoVersion = '2.2'
    googleServicesVersion = '10.0.1'
    hamcrestVersion = '1.3'
    okhttpVersion = '3.5.0'
    paperParcelVersion = '2.0.1'
    retrofitVersion = '2.1.0'
    stethoVersion = '1.4.2'
    supportLibVersion = '25.4.0'
    supportTestRunnerVersion = '0.5'
}

/**
 * Run `gradle dependencyUpdates -Drevision=release` to check for dependency updates
 */
dependencies {
    def daggerCompiler = "com.google.dagger:dagger-compiler:${daggerVersion}"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:2.6.3"

    // App Dependencies
    compile 'com.android.support:multidex:1.0.2'
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:support-annotations:${supportLibVersion}"

    compile "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-scalars:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"

    compile 'com.google.code.gson:gson:2.8.1'

    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.3.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }

    compile 'com.jakewharton.timber:timber:4.5.1'
    compile "com.jakewharton:butterknife:$butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    compile "net.ypresto.timbertreeutils:timbertreeutils:1.0.0"

    compile "com.github.ybq:Endless-RecyclerView:1.0.3"

    compile "nz.bradcampbell:paperparcel:${paperParcelVersion}"
    kapt "nz.bradcampbell:paperparcel-compiler:${paperParcelVersion}"

    compile  "com.google.dagger:dagger:${daggerVersion}"
    provided 'javax.annotation:jsr250-api:1.0' // Required by Dagger2
    kapt daggerCompiler
    kaptTest daggerCompiler
    kaptAndroidTest daggerCompiler

    debugCompile "com.facebook.stetho:stetho:${stethoVersion}"
    debugCompile "com.facebook.stetho:stetho-okhttp3:${stethoVersion}"
    debugCompile "com.facebook.stetho:stetho-timber:${stethoVersion}@aar"

    debugCompile "com.squareup.leakcanary:leakcanary-android:1.5.4"

    debugCompile 'hu.supercluster:paperwork:1.2.7'
    debugCompile "com.github.pedrovgs:lynx:1.6"

    // Instrumentation test dependencies
    androidTestCompile jUnit
    androidTestCompile mockito
    androidTestCompile "com.android.support:support-annotations:${supportLibVersion}"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${espressoVersion}") {
        // Causes IncompatibleClassChangeError.
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
    androidTestCompile "com.android.support.test:runner:${supportTestRunnerVersion}"
    androidTestCompile "com.android.support.test:rules:${supportTestRunnerVersion}"
    androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0'

    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile "org.hamcrest:hamcrest-core:${hamcrestVersion}"
    testCompile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    testCompile "org.hamcrest:hamcrest-integration:${hamcrestVersion}"
    testCompile 'org.robolectric:robolectric:3.4.2'
    testCompile "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

// Log out test results to console
tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}
repositories {
    mavenCentral()
}


